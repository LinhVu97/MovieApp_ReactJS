{"version":3,"sources":["components/Header/Header.js","components/BottomNavigation/BottomNavigation.js","components/config/config.js","components/Carousel/Carousel.js","components/ContentModal/ContentModal.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Pages/Trending/Trending.js","components/Genres/Genres.js","hooks/useGener.js","components/Pages/Movies/Movie.js","components/Pages/TvSeries/TvSeries.js","components/Pages/Search/Search.js","App.js","index.js"],"names":["Header","onClick","window","scroll","className","useStyles","makeStyles","root","width","position","bottom","backgroundColor","zIndex","Bottom","classes","useState","value","setValue","history","useHistory","useEffect","push","BottomNavigation","onChange","e","newValue","showLabels","BottomNavigationAction","style","color","label","icon","img_300","img_500","unavailable","handleDragStart","preventDefault","Carousel","id","media_type","credits","setCredits","items","map","c","src","profile_path","alt","name","onDragStart","fetchCredits","a","axios","get","process","data","cast","mouseTracking","infinite","disableDotsControls","disableButtonsControls","responsive","autoPlay","theme","modal","display","alignItems","justifyContent","paper","height","border","borderRadius","boxShadow","shadows","padding","spacing","ContentModal","children","React","open","setOpen","setData","video","setVideo","fetchAPI","fetchVideo","results","key","cursor","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","poster_path","title","backdrop_path","first_air_date","release_date","substring","tagline","overview","Button","variant","startIcon","target","href","Card","poster","date","vote_average","CustomPagination","setPage","numberOfPages","Pagination","count","page","textContent","hideNextButton","hidePrevButton","Trending","numOfPages","setNumOfPages","total_pages","Badge","badgeContent","Genres","type","selectedGenres","setSelectedGenres","genres","setGenres","g","Chip","margin","size","clickable","onDelete","genre","filter","selected","useGenres","reduce","acc","curr","Movie","genreForURL","TVSeries","Search","setType","searchText","setSearchText","fetchSearch","console","error","TextField","flex","marginLeft","fontSize","Tabs","indicatorColor","textColor","event","paddingBottom","Tab","App","Container","path","component","exact","TvSeries","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b0d66f2.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    return (\n        <div>\n            <span onClick={() => window.scroll(0,0)} className=\"header\"> 🎥 Entertainment Hub 🎬 </span>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport './BottomNavigation.css';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport TvIcon from '@material-ui/icons/Tv';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useHistory } from 'react-router-dom';\n\n// Inline styling with material UI\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        backgroundColor: '#2d313a',\n        zIndex: 100\n    },\n});\n\nconst Bottom = () => {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const history = useHistory();\n\n    useEffect(() => {\n        switch (value) {\n            case 1: \n                history.push('/movie')\n                break\n            case 2: \n                history.push('/tv')\n                break\n            case 3: \n                history.push('/search')\n                break\n            default:\n                history.push('/')\n                break\n        }\n    }, [value, history])\n\n    // Handle Change\n    const handleChange = (e, newValue) => {\n        setValue(newValue)\n    }\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={handleChange}\n            showLabels\n            className={classes.root}>\n\n            <BottomNavigationAction\n                style={{ color: \"white\" }}\n                label=\"Trending\"\n                icon={<WhatshotIcon />}\n            />\n\n            <BottomNavigationAction \n                label=\"Movies\" \n                icon={<MovieIcon />}\n                style={{ color: \"white\" }}\n            />\n            \n            <BottomNavigationAction \n                label=\"TV Series\" \n                icon={<TvIcon />} \n                style={{ color: \"white\" }}\n            />\n\n            <BottomNavigationAction \n                label=\"Search\" \n                icon={<SearchIcon />} \n                style={{ color: \"white\" }}\n            />\n        </BottomNavigation>\n    );\n}\n\nexport default Bottom","// image sizes for tmdb\nexport const img_300 = \"https://image.tmdb.org/t/p/w300\";\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\n\n// contentModal and singleContent\nexport const unavailable =\n  \"https://www.movienewz.com/img/films/poster-holder.jpg\";\n\n// contentModal\nexport const unavailableLandscape =\n  \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\";\n\n// For Carousel\nexport const noPicture =\n  \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport { img_300, noPicture } from \"../config/config\"\nimport \"./Carousel.css\";\n\nconst handleDragStart = (e) => e.preventDefault();\n\nconst Carousel = ({ id, media_type }) => {\n    const [credits, setCredits] = useState([]);\n\n    const items = credits.map((c) => (\n        <div className=\"carouselItem\">\n            <img\n                src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\n                alt={c?.name}\n                onDragStart={handleDragStart}\n                className=\"carouselItem__img\"\n            />\n            <b className=\"carouselItem__txt\">{c?.name}</b>\n        </div>\n    ));\n\n    const responsive = {\n        0: {\n            items: 3,\n        },\n        512: {\n            items: 5,\n        },\n        1024: {\n            items: 7,\n        },\n    };\n\n    const fetchCredits = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/${media_type}/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        );\n        setCredits(data.cast);\n    };\n\n    useEffect(() => {\n        fetchCredits();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <AliceCarousel\n            mouseTracking\n            infinite\n            disableDotsControls\n            disableButtonsControls\n            responsive={responsive}\n            items={items}\n            autoPlay\n        />\n    );\n};\n\nexport default Carousel;","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport './ContentModal.css';\nimport axios from 'axios';\nimport { img_500, unavailable } from '../config/config';\nimport { Button } from '@material-ui/core';\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Carousel from '../Carousel/Carousel'\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        width: \"90%\",\n        height: \"80%\",\n        backgroundColor: \"#39445a\",\n        border: \"1px solid #282c34\",\n        borderRadius: 10,\n        color: \"white\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(1, 1, 3),\n    },\n}));\n\nexport default function ContentModal({ children, media_type, id }) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [data, setData] = React.useState();\n    const [video, setVideo] = React.useState();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fetchAPI = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/${media_type}/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        )\n        setData(data);\n    }\n\n    const fetchVideo = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        );\n\n        setVideo(data.results[0]?.key);\n    };\n\n    useEffect(() => {\n        fetchAPI()\n        fetchVideo()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <>\n            <div className=\"media\" onClick={handleOpen} style={{cursor: 'pointer'}} color='inherit'>\n                {children}\n            </div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    {\n                        data && (\n                            <div className={classes.paper}>\n                                <div className='ContentModal'>\n                                    <img\n                                        src={data.poster_path ? `${img_500}/${data.poster_path}` : unavailable}\n                                        alt={data.name || data.title}\n                                        className='ContentModal__portrait'\n                                    />\n\n                                    <img\n                                        src={data.backdrop_path ? `${img_500}/${data.backdrop_path}` : unavailable}\n                                        alt={data.name || data.title}\n                                        className='ContentModal__landscape'\n                                    />\n\n                                    <div className='ContentModal__about'>\n                                        <span className='ContentModal__title'>\n                                            {data.name || data.title} (\n                                            {(\n                                                data.first_air_date ||\n                                                data.release_date ||\n                                                \"----\"\n                                            ).substring(0, 4)}\n                                            )\n                                        </span>\n\n                                        {\n                                            data.tagline && (\n                                                <i className='tagline'>{data.tagline}</i>\n                                            )\n                                        }\n\n                                        <span className='ContentModal__description'>\n                                            {data.overview}\n                                        </span>\n\n                                        <div >\n                                            <Carousel id={id} media_type={media_type}/>\n                                        </div>\n\n                                        <Button\n                                            variant=\"contained\"\n                                            startIcon={<YouTubeIcon />}\n                                            color=\"secondary\"\n                                            target=\"__blank\"\n                                            href={`https://www.youtube.com/watch?v=${video}`}>\n                                            Watch the Trailer\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </Fade>\n            </Modal>\n        </>\n    );\n}\n","import React from 'react'\nimport './Card.css' \nimport { img_300, unavailable } from '../config/config'\nimport ContentModal from '../ContentModal/ContentModal'\n\nconst Card = ({id, poster, title, date, media_type, vote_average}) => {\n    return (\n        <ContentModal media_type={media_type} id={id}>\n            <img className='poster' src={poster ? `${img_300}/${poster}` : unavailable} alt={title}/>\n            <b className=\"title\">{title}</b>\n            <span className=\"subTitle\">{media_type === 'tv' ? 'TV' : 'Movie'}\n                <span className=\"subTitle\">{date}</span>\n            </span>\n        </ContentModal>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Pagination from '@material-ui/lab/Pagination'\nimport './Pagination.css'\n\nconst CustomPagination = ({setPage, numberOfPages = 20}) => {\n    const handlePageChange = (page) => {\n        setPage(page)\n        window.scroll(0,0)\n    }\n\n    return (\n        <div className='pagination'>\n            <Pagination \n                count={numberOfPages} \n                onChange={(e) => handlePageChange(e.target.textContent)} // Choose content in page\n                hideNextButton\n                hidePrevButton\n                color='primary'\n            />\n        </div>\n    )\n}\n\nexport default CustomPagination\n","import { Badge } from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport Card from '../../Card/Card'\nimport './Trending.css'\nimport CustomPagination from '../../Pagination/Pagination'\n\nconst Trending = () => {\n    const [page, setPage] = useState(1)\n    const [data, setData] = useState([])\n    const [numOfPages, setNumOfPages] = useState()\n\n    // Fetch API\n    const fetchAPI = async () => {\n        let { data } = await axios.get(\n            `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`\n        )\n\n        // Promise\n        setData(data.results)\n        setNumOfPages(data.total_pages)\n    }\n\n    \n    useEffect(() => {\n        fetchAPI()\n        // eslint-disable-next-line\n    }, [page]) \n\n    return (\n        <div>\n            <span className=\"pageTitle\">Trending</span>\n            <div className=\"trending\">\n                {                               // {} check condition: have data and display Card\n                    data && data.map(c => ( \n                        <Badge key={c.id} badgeContent={c.vote_average} color={c.vote_average >= 7 ? 'primary' : 'secondary'}>\n                            <Card\n                                key={c.id}\n                                id={c.id}\n                                poster={c.poster_path}\n                                title={c.title || c.name} // title for movie and name for TVSeries\n                                date={c.first_air_date || c.release_date} // Same\n                                media_type={c.media_type}\n                                vote_average={c.vote_average}\n                            />\n                        </Badge>\n                    ))\n                }\n            </div>\n            <CustomPagination setPage={setPage} numberOfPages={numOfPages}/>\n        </div>\n    )\n}\n\nexport default Trending\n","import { Chip } from '@material-ui/core'\nimport axios from 'axios'\nimport React from 'react'\nimport { useEffect } from 'react'\n\nconst Genres = ({ type, selectedGenres, setSelectedGenres, genres, setGenres, setPage }) => {\n    // Add Genres\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre])\n        setGenres(genres.filter((g) => g.id !== genre.id)) // Remove genres have choice from selected genres\n        setPage(1);\n    }\n\n    // Remove Genres\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n          )\n        setGenres([...genres, genre])\n        setPage(1);\n    }\n\n    // Fetch API Genres \n    const fetchAPI = async () => {\n        let { data } = await axios.get(\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        )\n\n        setGenres(data.genres)\n    }\n\n    useEffect(() => {\n        fetchAPI()\n\n        return () => {\n            setGenres({})\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div style={{ padding: '6px 0' }}>\n            {\n                selectedGenres && selectedGenres.map(g => (\n                    <Chip\n                        key={g.id}\n                        label={g.name}\n                        style={{ margin: '2px' }}\n                        size='small'\n                        clickable\n                        color='primary'\n                        onDelete={() => handleRemove(g)}\n                    />\n                ))\n            }\n\n            {\n                genres && genres.map(g => (\n                    <Chip\n                        key={g.id}\n                        label={g.name}\n                        style={{ margin: '2px' }}\n                        size='small'\n                        clickable\n                        onClick={() => handleAdd(g)}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Genres\n","const useGenres = (selectedGenres) => {\n    if (selectedGenres < 1) {\n        return ''\n    }\n\n    const genreId = selectedGenres.map((g) => g.id)\n    return genreId.reduce((acc, curr) => acc + ',' + curr)\n}\n\nexport default useGenres","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Badge } from '@material-ui/core'\nimport Card from '../../Card/Card'\nimport CustomPagination from '../../Pagination/Pagination'\nimport Genres from '../../Genres/Genres'\nimport useGenres from '../../../hooks/useGener'\nimport './Movie.css'\n\nconst Movie = () => {\n    const [page, setPage] = useState(1)\n    const [data, setData] = useState([])\n    const [numOfPages, setNumOfPages] = useState()\n    const [genres, setGenres] = useState([])\n    const [selectedGenres, setSelectedGenres] = useState([])\n    const genreForURL = useGenres(selectedGenres)\n\n    // Fetch API Movie\n    const fetchAPI = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreForURL}`\n        )\n        setData(data.results)\n        setNumOfPages(data.total_pages)\n    }\n\n    useEffect(() => {\n        fetchAPI()\n        // eslint-disable-next-line\n    }, [page, genreForURL])\n\n    return (\n        <div>\n            <span className=\"pageTitle\">Movie</span>\n            <Genres\n                type='movie'\n                selectedGenres={selectedGenres}\n                setSelectedGenres={setSelectedGenres}\n                genres={genres}\n                setGenres={setGenres}\n                setPage={setPage}\n            />\n            <div className=\"trending\">\n                {\n                    data && data.map(c => (\n                        <Badge key={c.id} badgeContent={c.vote_average} color={c.vote_average >= 7 ? 'primary' : 'secondary'}>\n                            <Card\n                                key={c.id}\n                                id={c.id}\n                                poster={c.poster_path}\n                                title={c.title || c.name} // title for movie and name for TVSeries\n                                date={c.first_air_date || c.release_date} // Same\n                                media_type='movie'\n                                vote_average={c.vote_average}\n                            />\n                        </Badge>\n                    ))\n                }\n            </div>\n\n            {numOfPages > 1 && (\n                <CustomPagination setPage={setPage} numberOfPages={numOfPages} />\n            )}\n        </div>\n    )\n}\n\nexport default Movie\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Badge } from '@material-ui/core'\nimport Card from '../../Card/Card'\nimport CustomPagination from '../../Pagination/Pagination'\nimport Genres from '../../Genres/Genres'\nimport useGenres from '../../../hooks/useGener'\nimport './TvSeries.css'\n\nconst TVSeries = () => {\n    const [page, setPage] = useState(1)\n    const [data, setData] = useState([])\n    const [numOfPages, setNumOfPages] = useState()\n    const [genres, setGenres] = useState([])\n    const [selectedGenres, setSelectedGenres] = useState([])\n    const genreForURL = useGenres(selectedGenres)\n\n    // Fetch API Movie\n    const fetchAPI = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreForURL}`\n        )\n        setData(data.results)\n        setNumOfPages(data.total_pages)\n    }\n\n    useEffect(() => {\n        fetchAPI()\n        // eslint-disable-next-line\n    }, [page, genreForURL])\n\n    return (\n        <div>\n            <span className=\"pageTitle\">TV Series</span>\n            <Genres\n                type='tv'\n                selectedGenres={selectedGenres}\n                setSelectedGenres={setSelectedGenres}\n                genres={genres}\n                setGenres={setGenres}\n                setPage={setPage}\n            />\n            <div className=\"trending\">\n                {\n                    data && data.map(c => (\n                        <Badge key={c.id} badgeContent={c.vote_average} color={c.vote_average >= 7 ? 'primary' : 'secondary'}>\n                            <Card\n                                key={c.id}\n                                id={c.id}\n                                poster={c.poster_path}\n                                title={c.title || c.name} // title for movie and name for TVSeries\n                                date={c.first_air_date || c.release_date} // Same\n                                media_type=\"tv\"\n                                vote_average={c.vote_average}\n                            />\n                        </Badge>\n                    ))\n                }\n            </div>\n\n            {numOfPages > 1 && (\n                <CustomPagination setPage={setPage} numberOfPages={numOfPages} />\n            )}\n        </div>\n    )\n}\n\nexport default TVSeries\n","import { Button, Tab, Tabs } from '@material-ui/core'\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { TextField } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport './Search.css'\nimport axios from 'axios'\nimport { Badge } from '@material-ui/core'\nimport Card from '../../Card/Card'\nimport CustomPagination from '../../Pagination/Pagination'\n\n\nconst Search = () => {\n    const [type, setType] = useState(0)\n    const [searchText, setSearchText] = useState('')\n    const [page, setPage] = useState(1);\n    const [data, setData] = useState([])\n    const [numOfPages, setNumOfPages] = useState()\n\n    // Fetch Search\n    const fetchSearch = async () => {\n        try {\n            const { data } = await axios.get(\n                `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n            )\n            setData(data.results)\n            setNumOfPages(data.total_pages)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        window.scroll(0, 0)\n        fetchSearch()\n        // eslint-disable-next-line\n    }, [type, page])\n\n    return (\n        <div>\n            <div className='search'>\n                <TextField\n                    style={{ flex: 1 }}\n                    className=\"searchBox\"\n                    label=\"Search\"\n                    color=\"primary\"\n                    variant=\"filled\"\n                    onChange={(e) => setSearchText(e.target.value)}\n                />\n                <Button\n                    onClick={fetchSearch}\n                    variant=\"contained\"\n                    style={{ marginLeft: 10 }}>\n                    <SearchIcon fontSize=\"large\" />\n                </Button>\n            </div>\n\n            <Tabs\n                value={type}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={(event, newValue) => {\n                    setType(newValue)\n                    setPage(1)\n                }}\n                style={{ paddingBottom: 5 }}\n                aria-label=\"disabled tabs example\">\n                <Tab style={{ width: \"50%\" }} label=\"Search Movies\" />\n                <Tab style={{ width: \"50%\" }} label=\"Search TV Series\" />\n            </Tabs>\n\n            <div className=\"trending\">\n                {\n                    data && data.map(c => (\n                        <Badge key={c.id} badgeContent={c.vote_average} color={c.vote_average >= 7 ? 'primary' : 'secondary'}>\n                            <Card\n                                key={c.id}\n                                id={c.id}\n                                poster={c.poster_path}\n                                title={c.title || c.name} // title for movie and name for TVSeries\n                                date={c.first_air_date || c.release_date} // Same\n                                media_type={type ? 'tv' : 'movie'}\n                                vote_average={c.vote_average}\n                            />\n                        </Badge>\n                    ))\n                }\n                {\n                    searchText && \n                    !data && \n                    (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)\n                }\n            </div>\n            {numOfPages > 1 && (\n                <CustomPagination setPage={setPage} numberOfPages={numOfPages} />\n            )}\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport './App.css'\nimport Header from './components/Header/Header';\nimport Bottom from './components/BottomNavigation/BottomNavigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport Trending from './components/Pages/Trending/Trending'\nimport Movie from './components/Pages/Movies/Movie';\nimport TvSeries from './components/Pages/TvSeries/TvSeries';\nimport Search from './components/Pages/Search/Search';\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Header />\n            <div className=\"App\">\n                <Container>\n                    <Switch>\n                        <Route path=\"/\" component={Trending} exact/>\n                        <Route path=\"/movie\" component={Movie}/>\n                        <Route path=\"/tv\" component={TvSeries}/>\n                        <Route path=\"/search\" component={Search}/>\n                    </Switch>\n                </Container>\n            </div>\n            <Bottom />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}